token
line 1:(TYPE_INT, int)
line 1:(IDENTIFIER, arr)
line 1:(SQUARE_BRACKET_LEFT, [)
line 1:(INTEGER, 5)
line 1:(SQUARE_BRACKET_RIGHT, ])
line 1:(OP_EQU, =)
line 1:(BRACE_LEFT, {)
line 1:(INTEGER, 1)
line 1:(COMMA, ,)
line 1:(INTEGER, 2)
line 1:(COMMA, ,)
line 1:(INTEGER, 3)
line 1:(COMMA, ,)
line 1:(INTEGER, 4)
line 1:(COMMA, ,)
line 1:(INTEGER, 5)
line 1:(BRACE_RIGHT, })
line 1:(SEMICOLON, ;)
line 3:(LINE_COMMENT, //test)
line 4:(TYPE_INT, int)
line 4:(KEYWORD_MAIN, main)
line 4:(ROUND_BRACKET_LEFT, ()
line 4:(ROUND_BRACKET_RIGHT, ))
line 5:(BRACE_LEFT, {)
line 6:(COMMENT, /*22edagi#451__11*/)
line 7:(TYPE_STRING, string)
line 7:(IDENTIFIER, str)
line 7:(OP_EQU, =)
line 7:(STRING, "abcde")
line 7:(SEMICOLON, ;)
line 8:(TYPE_CHAR, char)
line 8:(IDENTIFIER, c)
line 8:(OP_EQU, =)
line 8:(CHAR, '@')
line 8:(SEMICOLON, ;)
line 9:(TYPE_INT, int)
line 9:(IDENTIFIER, a)
line 9:(SEMICOLON, ;)
line 10:(TYPE_INT, int)
line 10:(IDENTIFIER, b)
line 10:(OP_EQU, =)
line 10:(ROUND_BRACKET_LEFT, ()
line 10:(INTEGER, 3)
line 10:(OP_ADD, +)
line 10:(INTEGER, 2)
line 10:(ROUND_BRACKET_RIGHT, ))
line 10:(OP_MUL, *)
line 10:(INTEGER, 5)
line 10:(SEMICOLON, ;)
line 11:(TYPE_FLOAT, float)
line 11:(IDENTIFIER, ab)
line 11:(OP_EQU, =)
line 11:(ErrorAlert:can't find the signal definition, _)
line 11:(SEMICOLON, ;)
line 12:(KEYWORD_FOR, for)
line 12:(ROUND_BRACKET_LEFT, ()
line 12:(TYPE_INT, int)
line 12:(IDENTIFIER, i)
line 12:(OP_EQU, =)
line 12:(INTEGER, 0)
line 12:(SEMICOLON, ;)
line 12:(IDENTIFIER, i)
line 12:(OP_SMZ, <)
line 12:(INTEGER, 5)
line 12:(SEMICOLON, ;)
line 12:(IDENTIFIER, i)
line 12:(SELFOP_ADD, ++)
line 12:(ROUND_BRACKET_RIGHT, ))
line 12:(BRACE_LEFT, {)
line 13:(IDENTIFIER, b)
line 13:(SELFOP_ADD, ++)
line 13:(SEMICOLON, ;)
line 14:(SELFOP_SUB, --)
line 14:(IDENTIFIER, a)
line 14:(SEMICOLON, ;)
line 15:(BRACE_RIGHT, })
line 17:(KEYWORD_IF, if)
line 17:(ROUND_BRACKET_LEFT, ()
line 17:(IDENTIFIER, b)
line 17:(OP_EQU, =)
line 17:(OP_EQU, =)
line 17:(INTEGER, 20)
line 17:(ROUND_BRACKET_RIGHT, ))
line 18:(IDENTIFIER, a)
line 18:(OP_EQU, =)
line 18:(INTEGER, 0)
line 18:(SEMICOLON, ;)
line 19:(KEYWORD_ELSE, else)
line 20:(IDENTIFIER, a)
line 20:(OP_EQU, =)
line 20:(INTEGER, -1)
line 20:(SEMICOLON, ;)
line 22:(KEYWORD_RETURN, return)
line 22:(IDENTIFIER, a)
line 22:(SEMICOLON, ;)
line 23:(BRACE_RIGHT, })
